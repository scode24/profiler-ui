{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soumyabs\\\\Documents\\\\Projects\\\\ReactApp\\\\profiler-app\\\\src\\\\components\\\\Achievements.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport iconMap from '../icon-map.json';\nimport htmlPerser from 'html-react-parser';\nimport * as service from '../services';\nimport '../styles/Achievements.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Achievements() {\n  _s();\n  const [achievements, setAchievements] = useState();\n  useEffect(() => {\n    let url = window.location.href;\n    url = url.replace('http://', '');\n    url = url.replace('https://', '');\n    const email = url.split('/')[1];\n    service.getAchievements(email).then(response => {\n      setAchievements(response);\n    });\n  }, [achievements]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Achievements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-content-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-content-section-main\",\n        children: achievements !== undefined ? achievements.map((achievement, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item sub-content-item-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"icon\",\n              children: htmlPerser(iconMap['SubContent-About'])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: achievement.achievement\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: achievement.source\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(Achievements, \"Q4W0734u3MtlIILRvI8XFX1dqyw=\");\n_c = Achievements;\nexport default Achievements;\nvar _c;\n$RefreshReg$(_c, \"Achievements\");","map":{"version":3,"names":["React","useState","useEffect","iconMap","htmlPerser","service","Achievements","achievements","setAchievements","url","window","location","href","replace","email","split","getAchievements","then","response","undefined","map","achievement","index","source"],"sources":["C:/Users/soumyabs/Documents/Projects/ReactApp/profiler-app/src/components/Achievements.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport iconMap from '../icon-map.json';\r\nimport htmlPerser from 'html-react-parser';\r\nimport * as service from '../services';\r\nimport '../styles/Achievements.css';\r\n\r\nfunction Achievements() {\r\n\r\n    const [achievements, setAchievements] = useState();\r\n\r\n    useEffect(() => {\r\n        let url = window.location.href;\r\n        url = url.replace('http://', '');\r\n        url = url.replace('https://', '');\r\n        const email = url.split('/')[1];\r\n\r\n        service.getAchievements(email)\r\n            .then(response => {\r\n                setAchievements(response);\r\n            })\r\n    }, [achievements])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Achievements</h1>\r\n            <div className='sub-content-section'>\r\n                <div className='sub-content-section-main'>\r\n                    {achievements !== undefined ?\r\n                        achievements.map((achievement, index) => {\r\n                            return (\r\n                                <div className='item sub-content-item-card' key={index} >\r\n                                    <div className='icon'>\r\n                                        {htmlPerser(iconMap['SubContent-About'])}\r\n                                    </div>\r\n                                    <div className='info'>\r\n                                        <strong>{achievement.achievement}</strong>\r\n                                        <span>{achievement.source}</span>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                        : <></>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Achievements"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAO,KAAKC,OAAO,MAAM,aAAa;AACtC,OAAO,4BAA4B;AAAC;AAAA;AAEpC,SAASC,YAAY,GAAG;EAAA;EAEpB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,EAAE;EAElDC,SAAS,CAAC,MAAM;IACZ,IAAIO,GAAG,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI;IAC9BH,GAAG,GAAGA,GAAG,CAACI,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;IAChCJ,GAAG,GAAGA,GAAG,CAACI,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;IACjC,MAAMC,KAAK,GAAGL,GAAG,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAE/BV,OAAO,CAACW,eAAe,CAACF,KAAK,CAAC,CACzBG,IAAI,CAACC,QAAQ,IAAI;MACdV,eAAe,CAACU,QAAQ,CAAC;IAC7B,CAAC,CAAC;EACV,CAAC,EAAE,CAACX,YAAY,CAAC,CAAC;EAGlB,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,eACrB;MAAK,SAAS,EAAC,qBAAqB;MAAA,uBAChC;QAAK,SAAS,EAAC,0BAA0B;QAAA,UACpCA,YAAY,KAAKY,SAAS,GACvBZ,YAAY,CAACa,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,KAAK;UACrC,oBACI;YAAK,SAAS,EAAC,4BAA4B;YAAA,wBACvC;cAAK,SAAS,EAAC,MAAM;cAAA,UAChBlB,UAAU,CAACD,OAAO,CAAC,kBAAkB,CAAC;YAAC;cAAA;cAAA;cAAA;YAAA,QACtC,eACN;cAAK,SAAS,EAAC,MAAM;cAAA,wBACjB;gBAAA,UAASkB,WAAW,CAACA;cAAW;gBAAA;gBAAA;gBAAA;cAAA,QAAU,eAC1C;gBAAA,UAAOA,WAAW,CAACE;cAAM;gBAAA;gBAAA;gBAAA;cAAA,QAAQ;YAAA;cAAA;cAAA;cAAA;YAAA,QAC/B;UAAA,GAPuCD,KAAK;YAAA;YAAA;YAAA;UAAA,QAQhD;QAEd,CAAC,CAAC,gBACA;MAAK;QAAA;QAAA;QAAA;MAAA;IAET;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GA1CQhB,YAAY;AAAA,KAAZA,YAAY;AA4CrB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}