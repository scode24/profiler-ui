{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soumyabs\\\\Documents\\\\Projects\\\\ReactApp\\\\profiler-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport { useState, useEffect } from 'react';\nimport useScreenType from 'react-screentype-hook';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport About from './components/About';\nimport Skills from './components/Skills';\nimport WorkingExp from './components/WorkingExp';\nimport Qualification from './components/Qualification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const screenType = useScreenType();\n  const [cardState, setCardState] = useState({\n    isTitleOpen: true,\n    isMenuOpen: false,\n    isInfoOpen: false\n  });\n  useEffect(() => {\n    if (screenType.isTablet) {\n      setCardState({\n        isTitleOpen: false,\n        isMenuOpen: true,\n        isInfoOpen: true\n      });\n    }\n  }, [screenType.isTablet]);\n  const toggleCard = cardName => {\n    if (screenType.isTablet) {\n      setCardState({\n        isTitleOpen: !cardState.isTitleOpen,\n        isMenuOpen: !cardState.isMenuOpen,\n        isInfoOpen: !cardState.isInfoOpen\n      });\n    } else {\n      switch (cardName) {\n        case 'title':\n          setCardState({\n            isTitleOpen: !cardState.isTitleOpen,\n            isMenuOpen: false,\n            isInfoOpen: false\n          });\n          break;\n        case 'menu':\n          setCardState({\n            isTitleOpen: false,\n            isMenuOpen: !cardState.isMenuOpen,\n            isInfoOpen: false\n          });\n          break;\n        case 'info':\n          setCardState({\n            isTitleOpen: false,\n            isMenuOpen: false,\n            isInfoOpen: !cardState.isInfoOpen\n          });\n          break;\n        default:\n          console.log('Option not identified');\n          break;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      toggleCard: toggleCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/:email\",\n          element: /*#__PURE__*/_jsxDEV(Main, {\n            state: cardState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 42\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"skills\",\n            element: /*#__PURE__*/_jsxDEV(Skills, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"qualification\",\n            element: /*#__PURE__*/_jsxDEV(Qualification, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"workingExp\",\n            element: /*#__PURE__*/_jsxDEV(WorkingExp, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2V1Phzj52MxDrudKxxUtnekfIj8=\", false, function () {\n  return [useScreenType];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","useState","useEffect","useScreenType","BrowserRouter","Routes","Route","About","Skills","WorkingExp","Qualification","App","screenType","cardState","setCardState","isTitleOpen","isMenuOpen","isInfoOpen","isTablet","toggleCard","cardName","console","log"],"sources":["C:/Users/soumyabs/Documents/Projects/ReactApp/profiler-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport { useState, useEffect } from 'react';\nimport useScreenType from 'react-screentype-hook';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport About from './components/About';\nimport Skills from './components/Skills';\nimport WorkingExp from './components/WorkingExp';\nimport Qualification from './components/Qualification';\n\nfunction App() {\n\n  const screenType = useScreenType();\n  const [cardState, setCardState] = useState({\n    isTitleOpen: true,\n    isMenuOpen: false,\n    isInfoOpen: false\n  });\n\n  useEffect(() => {\n    if (screenType.isTablet) {\n      setCardState({\n        isTitleOpen: false,\n        isMenuOpen: true,\n        isInfoOpen: true\n      })\n    }\n  }, [screenType.isTablet])\n\n  const toggleCard = (cardName) => {\n\n    if (screenType.isTablet) {\n      setCardState({\n        isTitleOpen: !cardState.isTitleOpen,\n        isMenuOpen: !cardState.isMenuOpen,\n        isInfoOpen: !cardState.isInfoOpen\n      })\n    } else {\n      switch (cardName) {\n        case 'title':\n          setCardState({\n            isTitleOpen: !cardState.isTitleOpen,\n            isMenuOpen: false,\n            isInfoOpen: false\n          });\n          break;\n        case 'menu':\n          setCardState({\n            isTitleOpen: false,\n            isMenuOpen: !cardState.isMenuOpen,\n            isInfoOpen: false\n          });\n          break;\n        case 'info':\n          setCardState({\n            isTitleOpen: false,\n            isMenuOpen: false,\n            isInfoOpen: !cardState.isInfoOpen\n          });\n          break;\n        default:\n          console.log('Option not identified');\n          break;\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Header toggleCard={toggleCard} />\n\n      <BrowserRouter>\n        <Routes>\n          <Route path='/:email' element={<Main state={cardState} />}>\n            <Route path='about' element={<About />} />\n            <Route path='skills' element={<Skills />} />\n            <Route path='qualification' element={<Qualification />} />\n            <Route path='workingExp' element={<WorkingExp />} />\n          </Route>\n        </Routes>\n      </BrowserRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}