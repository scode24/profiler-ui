{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soumyabs\\\\Documents\\\\Projects\\\\ReactApp\\\\profiler-app\\\\src\\\\components\\\\WorkingExp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Stepper from './Stepper';\nimport * as service from '../services';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WorkingExp(props) {\n  _s();\n  const [source, setSource] = useState();\n  const [email, setEmail] = useState();\n  const [navData, setNavData] = useState();\n  const navigator = useNavigate();\n  useEffect(() => {\n    let url = window.location.href;\n    url = url.replace('http://', '');\n    url = url.replace('https://', '');\n    const email = url.split('/')[1];\n    setEmail(email);\n    service.getWorkingExps(email).then(response => {\n      let arr = [];\n      response.forEach(element => {\n        arr.push({\n          'leftInfo': element.jobStartDate + \" to \" + element.jobEndDate,\n          'rightPrimaryInfo': element.company,\n          'rightSecondaryInfo': element.designation\n        });\n      });\n      setSource(arr);\n    });\n    setNavData(props.nav('Working Experiences'));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Working Experiences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-content-section\",\n      children: [/*#__PURE__*/_jsxDEV(Stepper, {\n        source: source\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), navData !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item sub-content-item-card nav-page-bar\",\n        children: [navData.previous !== null ? /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => navigator(service.selectMenu(navData.previous, email)),\n          children: [\"< \", navData.previous]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 54\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 164\n        }, this), navData.next !== null ? /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => navigator(service.selectMenu(navData.next, email)),\n          children: [navData.next, \" >\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 50\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 152\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(WorkingExp, \"XzTxpGJvFutT4d5vTuOLUA5D1v4=\", false, function () {\n  return [useNavigate];\n});\n_c = WorkingExp;\nexport default WorkingExp;\nvar _c;\n$RefreshReg$(_c, \"WorkingExp\");","map":{"version":3,"names":["React","useState","useEffect","Stepper","service","useNavigate","WorkingExp","props","source","setSource","email","setEmail","navData","setNavData","navigator","url","window","location","href","replace","split","getWorkingExps","then","response","arr","forEach","element","push","jobStartDate","jobEndDate","company","designation","nav","undefined","previous","selectMenu","next"],"sources":["C:/Users/soumyabs/Documents/Projects/ReactApp/profiler-app/src/components/WorkingExp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Stepper from './Stepper'\r\nimport * as service from '../services'\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction WorkingExp(props) {\r\n\r\n    const [source, setSource] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [navData, setNavData] = useState();\r\n    const navigator = useNavigate();\r\n\r\n    useEffect(() => {\r\n        let url = window.location.href;\r\n        url = url.replace('http://', '');\r\n        url = url.replace('https://', '');\r\n        const email = url.split('/')[1];\r\n\r\n        setEmail(email);\r\n\r\n        service.getWorkingExps(email)\r\n            .then(response => {\r\n                let arr = []\r\n                response.forEach(element => {\r\n                    arr.push({\r\n                        'leftInfo': element.jobStartDate + \" to \" + element.jobEndDate,\r\n                        'rightPrimaryInfo': element.company,\r\n                        'rightSecondaryInfo': element.designation\r\n                    })\r\n                });\r\n\r\n                setSource(arr);\r\n            })\r\n\r\n        setNavData(props.nav('Working Experiences'));\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Working Experiences</h1>\r\n            <div className='sub-content-section'>\r\n                < Stepper source={source} />\r\n\r\n                {navData !== undefined ?\r\n                    <div className='item sub-content-item-card nav-page-bar'>\r\n                        {navData.previous !== null ? <span onClick={() => navigator(service.selectMenu(navData.previous, email))}>&lt; {navData.previous}</span> : <span></span>}\r\n                        {navData.next !== null ? <span onClick={() => navigator(service.selectMenu(navData.next, email))}>{navData.next} &gt;</span> : <span></span>}\r\n                    </div> : <></>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorkingExp"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,KAAKC,OAAO,MAAM,aAAa;AAEtC,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAAA;AAE/C,SAASC,UAAU,CAACC,KAAK,EAAE;EAAA;EAEvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,EAAE;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,EAAE;EACpC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,EAAE;EACxC,MAAMa,SAAS,GAAGT,WAAW,EAAE;EAE/BH,SAAS,CAAC,MAAM;IACZ,IAAIa,GAAG,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI;IAC9BH,GAAG,GAAGA,GAAG,CAACI,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;IAChCJ,GAAG,GAAGA,GAAG,CAACI,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;IACjC,MAAMT,KAAK,GAAGK,GAAG,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAE/BT,QAAQ,CAACD,KAAK,CAAC;IAEfN,OAAO,CAACiB,cAAc,CAACX,KAAK,CAAC,CACxBY,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIC,GAAG,GAAG,EAAE;MACZD,QAAQ,CAACE,OAAO,CAACC,OAAO,IAAI;QACxBF,GAAG,CAACG,IAAI,CAAC;UACL,UAAU,EAAED,OAAO,CAACE,YAAY,GAAG,MAAM,GAAGF,OAAO,CAACG,UAAU;UAC9D,kBAAkB,EAAEH,OAAO,CAACI,OAAO;UACnC,oBAAoB,EAAEJ,OAAO,CAACK;QAClC,CAAC,CAAC;MACN,CAAC,CAAC;MAEFtB,SAAS,CAACe,GAAG,CAAC;IAClB,CAAC,CAAC;IAENX,UAAU,CAACN,KAAK,CAACyB,GAAG,CAAC,qBAAqB,CAAC,CAAC;EAEhD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA4B,eAC5B;MAAK,SAAS,EAAC,qBAAqB;MAAA,wBAChC,QAAE,OAAO;QAAC,MAAM,EAAExB;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG,EAE3BI,OAAO,KAAKqB,SAAS,gBAClB;QAAK,SAAS,EAAC,yCAAyC;QAAA,WACnDrB,OAAO,CAACsB,QAAQ,KAAK,IAAI,gBAAG;UAAM,OAAO,EAAE,MAAMpB,SAAS,CAACV,OAAO,CAAC+B,UAAU,CAACvB,OAAO,CAACsB,QAAQ,EAAExB,KAAK,CAAC,CAAE;UAAA,iBAAOE,OAAO,CAACsB,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ,gBAAG;UAAA;UAAA;UAAA;QAAA,QAAa,EACvJtB,OAAO,CAACwB,IAAI,KAAK,IAAI,gBAAG;UAAM,OAAO,EAAE,MAAMtB,SAAS,CAACV,OAAO,CAAC+B,UAAU,CAACvB,OAAO,CAACwB,IAAI,EAAE1B,KAAK,CAAC,CAAE;UAAA,WAAEE,OAAO,CAACwB,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,gBAAG;UAAA;UAAA;UAAA;QAAA,QAAa;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1I,gBAAG,qCAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAEhB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GAhDQ9B,UAAU;EAAA,QAKGD,WAAW;AAAA;AAAA,KALxBC,UAAU;AAkDnB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}