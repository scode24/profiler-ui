{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soumyabs\\\\Documents\\\\Projects\\\\ReactApp\\\\profiler-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport { useState, useEffect } from 'react';\nimport useScreenType from 'react-screentype-hook';\nimport queryString from 'query-string';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const screenType = useScreenType();\n  const [email, setEmail] = useState();\n  const [cardState, setCardState] = useState({\n    isTitleOpen: true,\n    isMenuOpen: false,\n    isInfoOpen: false\n  });\n  useEffect(() => {\n    if (screenType.isTablet) {\n      setCardState({\n        isTitleOpen: false,\n        isMenuOpen: true,\n        isInfoOpen: true\n      });\n    }\n    const params = new URLSearchParams(window.location.search);\n    setEmail(params.get('email'));\n  }, []);\n  const toggleCard = cardName => {\n    if (screenType.isTablet) {\n      setCardState({\n        isTitleOpen: !cardState.isTitleOpen,\n        isMenuOpen: !cardState.isMenuOpen,\n        isInfoOpen: !cardState.isInfoOpen\n      });\n    } else {\n      switch (cardName) {\n        case 'title':\n          setCardState({\n            isTitleOpen: !cardState.isTitleOpen,\n            isMenuOpen: false,\n            isInfoOpen: false\n          });\n          break;\n        case 'menu':\n          setCardState({\n            isTitleOpen: false,\n            isMenuOpen: !cardState.isMenuOpen,\n            isInfoOpen: false\n          });\n          break;\n        case 'info':\n          setCardState({\n            isTitleOpen: false,\n            isMenuOpen: false,\n            isInfoOpen: !cardState.isInfoOpen\n          });\n          break;\n        default:\n          console.log('Option not identified');\n          break;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      toggleCard: toggleCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), console.log(email), /*#__PURE__*/_jsxDEV(Main, {\n      state: cardState,\n      email: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Un1BH/fxljLSkPSRKMTj02dRBMk=\", false, function () {\n  return [useScreenType];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","useState","useEffect","useScreenType","queryString","App","screenType","email","setEmail","cardState","setCardState","isTitleOpen","isMenuOpen","isInfoOpen","isTablet","params","URLSearchParams","window","location","search","get","toggleCard","cardName","console","log"],"sources":["C:/Users/soumyabs/Documents/Projects/ReactApp/profiler-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport { useState, useEffect } from 'react';\nimport useScreenType from 'react-screentype-hook';\nimport queryString from 'query-string';\n\nfunction App() {\n\n  const screenType = useScreenType();\n  const [email, setEmail] = useState();\n\n  const [cardState, setCardState] = useState({\n    isTitleOpen: true,\n    isMenuOpen: false,\n    isInfoOpen: false\n  });\n\n  useEffect(() => {\n    if (screenType.isTablet) {\n      setCardState({\n        isTitleOpen: false,\n        isMenuOpen: true,\n        isInfoOpen: true\n      })\n    }\n\n    const params = new URLSearchParams(window.location.search);\n    setEmail(params.get('email'));\n\n  }, [])\n\n\n\n  const toggleCard = (cardName) => {\n\n    if (screenType.isTablet) {\n      setCardState({\n        isTitleOpen: !cardState.isTitleOpen,\n        isMenuOpen: !cardState.isMenuOpen,\n        isInfoOpen: !cardState.isInfoOpen\n      })\n    } else {\n      switch (cardName) {\n        case 'title':\n          setCardState({\n            isTitleOpen: !cardState.isTitleOpen,\n            isMenuOpen: false,\n            isInfoOpen: false\n          });\n          break;\n        case 'menu':\n          setCardState({\n            isTitleOpen: false,\n            isMenuOpen: !cardState.isMenuOpen,\n            isInfoOpen: false\n          });\n          break;\n        case 'info':\n          setCardState({\n            isTitleOpen: false,\n            isMenuOpen: false,\n            isInfoOpen: !cardState.isInfoOpen\n          });\n          break;\n        default:\n          console.log('Option not identified');\n          break;\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Header toggleCard={toggleCard} />\n      {console.log(email)}\n      <Main state={cardState} email={email} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,WAAW,MAAM,cAAc;AAAC;AAEvC,SAASC,GAAG,GAAG;EAAA;EAEb,MAAMC,UAAU,GAAGH,aAAa,EAAE;EAClC,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,EAAE;EAEpC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC;IACzCU,WAAW,EAAE,IAAI;IACjBC,UAAU,EAAE,KAAK;IACjBC,UAAU,EAAE;EACd,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACd,IAAII,UAAU,CAACQ,QAAQ,EAAE;MACvBJ,YAAY,CAAC;QACXC,WAAW,EAAE,KAAK;QAClBC,UAAU,EAAE,IAAI;QAChBC,UAAU,EAAE;MACd,CAAC,CAAC;IACJ;IAEA,MAAME,MAAM,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC1DX,QAAQ,CAACO,MAAM,CAACK,GAAG,CAAC,OAAO,CAAC,CAAC;EAE/B,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMC,UAAU,GAAIC,QAAQ,IAAK;IAE/B,IAAIhB,UAAU,CAACQ,QAAQ,EAAE;MACvBJ,YAAY,CAAC;QACXC,WAAW,EAAE,CAACF,SAAS,CAACE,WAAW;QACnCC,UAAU,EAAE,CAACH,SAAS,CAACG,UAAU;QACjCC,UAAU,EAAE,CAACJ,SAAS,CAACI;MACzB,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,QAAQS,QAAQ;QACd,KAAK,OAAO;UACVZ,YAAY,CAAC;YACXC,WAAW,EAAE,CAACF,SAAS,CAACE,WAAW;YACnCC,UAAU,EAAE,KAAK;YACjBC,UAAU,EAAE;UACd,CAAC,CAAC;UACF;QACF,KAAK,MAAM;UACTH,YAAY,CAAC;YACXC,WAAW,EAAE,KAAK;YAClBC,UAAU,EAAE,CAACH,SAAS,CAACG,UAAU;YACjCC,UAAU,EAAE;UACd,CAAC,CAAC;UACF;QACF,KAAK,MAAM;UACTH,YAAY,CAAC;YACXC,WAAW,EAAE,KAAK;YAClBC,UAAU,EAAE,KAAK;YACjBC,UAAU,EAAE,CAACJ,SAAS,CAACI;UACzB,CAAC,CAAC;UACF;QACF;UACEU,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;UACpC;MAAM;IAEZ;EACF,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,UAAU,EAAEH;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,EACjCE,OAAO,CAACC,GAAG,CAACjB,KAAK,CAAC,eACnB,QAAC,IAAI;MAAC,KAAK,EAAEE,SAAU;MAAC,KAAK,EAAEF;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACpC;AAEV;AAAC,GAxEQF,GAAG;EAAA,QAESF,aAAa;AAAA;AAAA,KAFzBE,GAAG;AA0EZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}