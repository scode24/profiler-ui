{"ast":null,"code":"import axios from 'axios';\nimport appProp from './application';\nexport const serviceCacheMap = new Map();\nexport const selectMenu = menuTitle => {\n  switch (menuTitle) {\n    case 'About':\n      navigate('/' + param.email + '/about');\n      break;\n    case 'Skills':\n      navigate('/' + param.email + '/skills');\n      break;\n    case 'Qualifications':\n      navigate('/' + param.email + '/qualification');\n      break;\n    case 'Working Experiences':\n      navigate('/' + param.email + '/workingExp');\n      break;\n    case 'Achievements':\n      navigate('/' + param.email + '/achievements');\n      break;\n    default:\n      break;\n  }\n  if (screenType.isMobile) props.state.isMenuOpen = false;\n};\nexport const getMenuList = async email => {\n  if (email !== undefined) {\n    if (!serviceCacheMap.has('getMenuList')) {\n      const response = await axios.get(appProp.service_base_url + '/getMenus?email=' + email);\n      serviceCacheMap.set('getMenuList', response.data);\n    }\n    return serviceCacheMap.get('getMenuList');\n  }\n};\nexport const getTitleCardContactList = async email => {\n  if (email !== undefined) {\n    if (!serviceCacheMap.has('getTitleCardContactList')) {\n      const response = await axios.get(appProp.service_base_url + '/getContacts?email=' + email);\n      serviceCacheMap.set('getTitleCardContactList', response.data);\n    }\n    return serviceCacheMap.get('getTitleCardContactList');\n  }\n};\nexport const getTitleCardLinkList = async email => {\n  if (email !== undefined) {\n    if (!serviceCacheMap.has('getTitleCardLinkList')) {\n      const response = await axios.get(appProp.service_base_url + '/getLinks?email=' + email);\n      serviceCacheMap.set('getTitleCardLinkList', response.data);\n    }\n    return serviceCacheMap.get('getTitleCardLinkList');\n  }\n};\nexport const getTitleCardName = async email => {\n  if (email !== undefined) {\n    const response = await axios.get(appProp.service_base_url + '/getTitleCardInfo?email=' + email);\n    if (!serviceCacheMap.has('getTitleCardName')) {\n      serviceCacheMap.set('getTitleCardName', response.data);\n    }\n    return serviceCacheMap.get('getTitleCardName');\n  }\n};\nexport const getWorkingExps = async email => {\n  if (email !== undefined) {\n    if (!serviceCacheMap.has('getWorkingExps')) {\n      const response = await axios.get(appProp.service_base_url + '/getWorkingExperiences?email=' + email);\n      serviceCacheMap.set('getWorkingExps', response.data);\n    }\n    return serviceCacheMap.get('getWorkingExps');\n  }\n};\nexport const getQualification = async email => {\n  if (email !== undefined) {\n    if (!serviceCacheMap.has('getQualification')) {\n      const response = await axios.get(appProp.service_base_url + '/getQualification?email=' + email);\n      serviceCacheMap.set('getQualification', response.data);\n    }\n    return serviceCacheMap.get('getQualification');\n  }\n};\nexport const getSkills = async email => {\n  if (email !== undefined) {\n    if (!serviceCacheMap.has('getSkills')) {\n      const response = await axios.get(appProp.service_base_url + '/getSkills?email=' + email);\n      serviceCacheMap.set('getSkills', response.data);\n    }\n    return serviceCacheMap.get('getSkills');\n  }\n};\nexport const getAchievements = async email => {\n  if (email !== undefined) {\n    if (!serviceCacheMap.has('getAchievements')) {\n      const response = await axios.get(appProp.service_base_url + '/getAchievements?email=' + email);\n      serviceCacheMap.set('getAchievements', response.data);\n    }\n    return serviceCacheMap.get('getAchievements');\n  }\n};\nexport const getAboutCandidate = async email => {\n  if (email !== undefined) {\n    if (!serviceCacheMap.has('getAboutCandidate')) {\n      const response = await axios.get(appProp.service_base_url + '/getAboutCandidate?email=' + email);\n      serviceCacheMap.set('getAboutCandidate', response.data);\n    }\n    return serviceCacheMap.get('getAboutCandidate');\n  }\n};","map":{"version":3,"names":["axios","appProp","serviceCacheMap","Map","selectMenu","menuTitle","navigate","param","email","screenType","isMobile","props","state","isMenuOpen","getMenuList","undefined","has","response","get","service_base_url","set","data","getTitleCardContactList","getTitleCardLinkList","getTitleCardName","getWorkingExps","getQualification","getSkills","getAchievements","getAboutCandidate"],"sources":["C:/Users/soumyabs/Documents/Projects/ReactApp/profiler-app/src/services.js"],"sourcesContent":["import axios from 'axios';\r\nimport appProp from './application';\r\n\r\nexport const serviceCacheMap = new Map();\r\n\r\nexport const selectMenu = (menuTitle) => {\r\n    switch (menuTitle) {\r\n        case 'About':\r\n            navigate('/' + param.email + '/about')\r\n            break;\r\n        case 'Skills':\r\n            navigate('/' + param.email + '/skills')\r\n            break;\r\n        case 'Qualifications':\r\n            navigate('/' + param.email + '/qualification')\r\n            break;\r\n        case 'Working Experiences':\r\n            navigate('/' + param.email + '/workingExp')\r\n            break;\r\n        case 'Achievements':\r\n            navigate('/' + param.email + '/achievements')\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    if (screenType.isMobile)\r\n        props.state.isMenuOpen = false;\r\n}\r\n\r\nexport const getMenuList = async (email) => {\r\n    if (email !== undefined) {\r\n\r\n        if (!serviceCacheMap.has('getMenuList')) {\r\n            const response = await axios.get(appProp.service_base_url + '/getMenus?email=' + email);\r\n            serviceCacheMap.set('getMenuList', response.data);\r\n        }\r\n\r\n        return serviceCacheMap.get('getMenuList');\r\n    }\r\n}\r\n\r\nexport const getTitleCardContactList = async (email) => {\r\n    if (email !== undefined) {\r\n\r\n        if (!serviceCacheMap.has('getTitleCardContactList')) {\r\n            const response = await axios.get(appProp.service_base_url + '/getContacts?email=' + email);\r\n            serviceCacheMap.set('getTitleCardContactList', response.data);\r\n        }\r\n\r\n        return serviceCacheMap.get('getTitleCardContactList');\r\n    }\r\n}\r\n\r\nexport const getTitleCardLinkList = async (email) => {\r\n    if (email !== undefined) {\r\n\r\n        if (!serviceCacheMap.has('getTitleCardLinkList')) {\r\n            const response = await axios.get(appProp.service_base_url + '/getLinks?email=' + email);\r\n            serviceCacheMap.set('getTitleCardLinkList', response.data);\r\n        }\r\n\r\n        return serviceCacheMap.get('getTitleCardLinkList');\r\n    }\r\n}\r\n\r\nexport const getTitleCardName = async (email) => {\r\n    if (email !== undefined) {\r\n\r\n        const response = await axios.get(appProp.service_base_url + '/getTitleCardInfo?email=' + email);\r\n        if (!serviceCacheMap.has('getTitleCardName')) {\r\n            serviceCacheMap.set('getTitleCardName', response.data);\r\n        }\r\n\r\n        return serviceCacheMap.get('getTitleCardName');\r\n    }\r\n}\r\n\r\nexport const getWorkingExps = async (email) => {\r\n    if (email !== undefined) {\r\n\r\n        if (!serviceCacheMap.has('getWorkingExps')) {\r\n            const response = await axios.get(appProp.service_base_url + '/getWorkingExperiences?email=' + email);\r\n            serviceCacheMap.set('getWorkingExps', response.data);\r\n        }\r\n\r\n        return serviceCacheMap.get('getWorkingExps');\r\n    }\r\n}\r\n\r\n\r\nexport const getQualification = async (email) => {\r\n    if (email !== undefined) {\r\n\r\n        if (!serviceCacheMap.has('getQualification')) {\r\n            const response = await axios.get(appProp.service_base_url + '/getQualification?email=' + email);\r\n            serviceCacheMap.set('getQualification', response.data);\r\n        }\r\n\r\n        return serviceCacheMap.get('getQualification');\r\n    }\r\n}\r\n\r\nexport const getSkills = async (email) => {\r\n    if (email !== undefined) {\r\n\r\n        if (!serviceCacheMap.has('getSkills')) {\r\n            const response = await axios.get(appProp.service_base_url + '/getSkills?email=' + email);\r\n            serviceCacheMap.set('getSkills', response.data);\r\n        }\r\n\r\n        return serviceCacheMap.get('getSkills');\r\n    }\r\n}\r\n\r\nexport const getAchievements = async (email) => {\r\n    if (email !== undefined) {\r\n\r\n        if (!serviceCacheMap.has('getAchievements')) {\r\n            const response = await axios.get(appProp.service_base_url + '/getAchievements?email=' + email);\r\n            serviceCacheMap.set('getAchievements', response.data);\r\n        }\r\n\r\n        return serviceCacheMap.get('getAchievements');\r\n    }\r\n}\r\n\r\nexport const getAboutCandidate = async (email) => {\r\n    if (email !== undefined) {\r\n\r\n        if (!serviceCacheMap.has('getAboutCandidate')) {\r\n            const response = await axios.get(appProp.service_base_url + '/getAboutCandidate?email=' + email);\r\n            serviceCacheMap.set('getAboutCandidate', response.data);\r\n        }\r\n\r\n        return serviceCacheMap.get('getAboutCandidate');\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}