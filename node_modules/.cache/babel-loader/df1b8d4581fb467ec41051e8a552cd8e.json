{"ast":null,"code":"import _slicedToArray from\"C:/Users/soumyabs/Documents/Projects/ReactApp/profiler-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./App.css';import Header from'./components/Header';import Main from'./components/Main';import{useState,useEffect}from'react';import useScreenType from'react-screentype-hook';import{BrowserRouter,Routes,Route}from'react-router-dom';import About from'./components/About';import Skills from'./components/Skills';import WorkingExp from'./components/WorkingExp';import Qualification from'./components/Qualification';import Achievements from'./components/Achievements';import*as service from'./services';import Projects from'./components/Projects';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var screenType=useScreenType();var _useState=useState({isTitleOpen:true,isMenuOpen:false,isInfoOpen:false}),_useState2=_slicedToArray(_useState,2),cardState=_useState2[0],setCardState=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),menuList=_useState4[0],setMenuList=_useState4[1];useEffect(function(){var url=window.location.href;url=url.replace('http://','');url=url.replace('https://','');var email=url.split('/')[1];if(screenType.isTablet){setCardState({isTitleOpen:false,isMenuOpen:true,isInfoOpen:true});}service.getMenuList(email).then(function(response){setMenuList(response);});},[screenType.isTablet]);var getNavOption=function getNavOption(page){if(menuList!==undefined){var pageIndex=0;for(var index=0;index<menuList.length;index++){if(menuList[index].title===page){pageIndex=index;break;}}if(pageIndex===0){return{'previous':null,'next':menuList[pageIndex+1].title};}else if(pageIndex===menuList.length-1){return{'previous':menuList[pageIndex-1].title,'next':null};}return{'previous':menuList[pageIndex-1].title,'next':menuList[pageIndex+1].title};}};var toggleCard=function toggleCard(cardName){if(screenType.isTablet){setCardState({isTitleOpen:!cardState.isTitleOpen,isMenuOpen:!cardState.isMenuOpen,isInfoOpen:!cardState.isInfoOpen});}else{switch(cardName){case'title':setCardState({isTitleOpen:!cardState.isTitleOpen,isMenuOpen:false,isInfoOpen:false});break;case'menu':setCardState({isTitleOpen:false,isMenuOpen:!cardState.isMenuOpen,isInfoOpen:false});break;case'info':setCardState({isTitleOpen:false,isMenuOpen:false,isInfoOpen:!cardState.isInfoOpen});break;default:console.log('Option not identified');break;}}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{toggleCard:toggleCard}),/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsxs(Route,{path:\"/:email\",element:/*#__PURE__*/_jsx(Main,{state:cardState}),children:[/*#__PURE__*/_jsx(Route,{path:\"about\",element:/*#__PURE__*/_jsx(About,{nav:getNavOption})}),/*#__PURE__*/_jsx(Route,{path:\"skills\",element:/*#__PURE__*/_jsx(Skills,{nav:getNavOption})}),/*#__PURE__*/_jsx(Route,{path:\"qualification\",element:/*#__PURE__*/_jsx(Qualification,{nav:getNavOption})}),/*#__PURE__*/_jsx(Route,{path:\"workingExp\",element:/*#__PURE__*/_jsx(WorkingExp,{nav:getNavOption})}),/*#__PURE__*/_jsx(Route,{path:\"achievements\",element:/*#__PURE__*/_jsx(Achievements,{nav:getNavOption})}),/*#__PURE__*/_jsx(Route,{path:\"projects\",element:/*#__PURE__*/_jsx(Projects,{nav:getNavOption})})]})})})]});}export default App;","map":{"version":3,"names":["Header","Main","useState","useEffect","useScreenType","BrowserRouter","Routes","Route","About","Skills","WorkingExp","Qualification","Achievements","service","Projects","App","screenType","isTitleOpen","isMenuOpen","isInfoOpen","cardState","setCardState","menuList","setMenuList","url","window","location","href","replace","email","split","isTablet","getMenuList","then","response","getNavOption","page","undefined","pageIndex","index","length","title","toggleCard","cardName","console","log"],"sources":["C:/Users/soumyabs/Documents/Projects/ReactApp/profiler-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport { useState, useEffect } from 'react';\nimport useScreenType from 'react-screentype-hook';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport About from './components/About';\nimport Skills from './components/Skills';\nimport WorkingExp from './components/WorkingExp';\nimport Qualification from './components/Qualification';\nimport Achievements from './components/Achievements';\nimport * as service from './services';\nimport Projects from './components/Projects';\n\nfunction App() {\n\n  const screenType = useScreenType();\n  const [cardState, setCardState] = useState({\n    isTitleOpen: true,\n    isMenuOpen: false,\n    isInfoOpen: false\n  });\n\n  const [menuList, setMenuList] = useState();\n\n  useEffect(() => {\n\n    let url = window.location.href;\n    url = url.replace('http://', '');\n    url = url.replace('https://', '');\n    const email = url.split('/')[1];\n\n    if (screenType.isTablet) {\n      setCardState({\n        isTitleOpen: false,\n        isMenuOpen: true,\n        isInfoOpen: true\n      })\n    }\n\n    service.getMenuList(email)\n      .then(response => {\n        setMenuList(response);\n      })\n\n\n  }, [screenType.isTablet])\n\n  const getNavOption = (page) => {\n    if (menuList !== undefined) {\n\n      let pageIndex = 0;\n      for (let index = 0; index < menuList.length; index++) {\n        if (menuList[index].title === page) {\n          pageIndex = index;\n          break;\n        }\n      }\n\n      if (pageIndex === 0) {\n        return {\n          'previous': null,\n          'next': menuList[pageIndex + 1].title,\n        }\n      } else if (pageIndex === menuList.length - 1) {\n        return {\n          'previous': menuList[pageIndex - 1].title,\n          'next': null\n        }\n      }\n      return {\n        'previous': menuList[pageIndex - 1].title,\n        'next': menuList[pageIndex + 1].title,\n      }\n    }\n  }\n\n  const toggleCard = (cardName) => {\n\n    if (screenType.isTablet) {\n      setCardState({\n        isTitleOpen: !cardState.isTitleOpen,\n        isMenuOpen: !cardState.isMenuOpen,\n        isInfoOpen: !cardState.isInfoOpen\n      })\n    } else {\n      switch (cardName) {\n        case 'title':\n          setCardState({\n            isTitleOpen: !cardState.isTitleOpen,\n            isMenuOpen: false,\n            isInfoOpen: false\n          });\n          break;\n        case 'menu':\n          setCardState({\n            isTitleOpen: false,\n            isMenuOpen: !cardState.isMenuOpen,\n            isInfoOpen: false\n          });\n          break;\n        case 'info':\n          setCardState({\n            isTitleOpen: false,\n            isMenuOpen: false,\n            isInfoOpen: !cardState.isInfoOpen\n          });\n          break;\n        default:\n          console.log('Option not identified');\n          break;\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Header toggleCard={toggleCard} />\n\n      <BrowserRouter>\n        <Routes>\n          <Route path='/:email' element={<Main state={cardState} />}>\n            <Route path='about' element={<About nav={getNavOption} />} />\n            <Route path='skills' element={<Skills nav={getNavOption} />} />\n            <Route path='qualification' element={<Qualification nav={getNavOption} />} />\n            <Route path='workingExp' element={<WorkingExp nav={getNavOption} />} />\n            <Route path='achievements' element={<Achievements nav={getNavOption} />} />\n            <Route path='projects' element={<Projects nav={getNavOption} />} />\n          </Route>\n        </Routes>\n      </BrowserRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}